name: GitHub CI

on:
  pull_request:
  push:
  schedule:
    - cron: 0 0 * * 0
  workflow_dispatch: 

defaults:
  run:
    shell: 'bash -Eeuo pipefail -x {0}'

jobs:

  generate-jobs:
    name: Generate Jobs
    runs-on: ubuntu-latest
    outputs:
      strategy: ${{ steps.generate-jobs.outputs.strategy }}
    steps:
      - uses: actions/checkout@v1
      - id: generate-jobs
        name: Generate Jobs
        run: |
          git clone --depth 1 https://github.com/docker-library/bashbrew.git -b master ~/bashbrew
          strategy="$(~/bashbrew/scripts/github-actions/generate.sh)"
          jq . <<<"$strategy" # sanity check / debugging aid
          echo "::set-output name=strategy::$strategy"

  test:
    needs: generate-jobs
    strategy: ${{ fromJson(needs.generate-jobs.outputs.strategy) }}
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - name: Prepare Environment
        run: ${{ matrix.runs.prepare }}
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull Dependencies
        run: ${{ matrix.runs.pull }}
      - name: Build ${{ matrix.name }}
        run: ${{ matrix.runs.build }}
      - name: History ${{ matrix.name }}
        run: ${{ matrix.runs.history }}
      - name: Test ${{ matrix.name }}
        run: ${{ matrix.runs.test }}
      - name: '"docker images"'
        run: $(${{ matrix.runs.images }} | grep -vi REPOSITORY | grep -vi librarytest | awk '{print "docker tag " $3 " ghcr.io/mikesplain/" $1 ":"$2}' | bash)
      - name: '"docker images - retagged"'
        run: ${{ matrix.runs.images }}
      - name: '"docker images - retagged"'
        run: $(${{ matrix.runs.images }} | grep mikesplain | awk '{print "docker push " $1 ":" $2}' | bash)
